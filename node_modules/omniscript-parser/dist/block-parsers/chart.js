"use strict";
// File: omniscript-core/parser/src/block-parsers/chart.ts
// What: Parser for @chart blocks for data visualization
// Why: Extract chart type, title, data, and options with type validation
// Related: types.ts, lexer/index.ts, utils/validation.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseChartBlock = parseChartBlock;
const lexer_1 = require("../lexer");
const validation_1 = require("../utils/validation");
const VALID_CHART_TYPES = ['bar', 'line', 'pie', 'scatter', 'area'];
function parseChartBlock(content) {
    const props = (0, lexer_1.parseKV)(content);
    // Validate chart type with safe default
    const chartType = (0, validation_1.validateEnum)(props.type, VALID_CHART_TYPES, 'bar');
    // Validate and type data as ChartDataSeries[] (cast via unknown for type safety)
    const data = (Array.isArray(props.data) ? props.data : []);
    // Build chart with options if present
    if (props.options !== undefined && props.options !== null && typeof props.options === 'object') {
        return {
            type: 'chart',
            chartType,
            title: (0, validation_1.validateString)(props.title, 'Chart'),
            data,
            options: props.options,
        };
    }
    return {
        type: 'chart',
        chartType,
        title: (0, validation_1.validateString)(props.title, 'Chart'),
        data,
    };
}
//# sourceMappingURL=chart.js.map