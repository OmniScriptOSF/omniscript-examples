"use strict";
// File: omniscript-core/parser/src/block-parsers/diagram.ts
// What: Parser for @diagram blocks for flowcharts, sequences, etc.
// Why: Extract diagram type, engine, and code with type validation
// Related: types.ts, lexer/index.ts, utils/validation.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseDiagramBlock = parseDiagramBlock;
const lexer_1 = require("../lexer");
const validation_1 = require("../utils/validation");
const VALID_DIAGRAM_TYPES = ['flowchart', 'sequence', 'gantt', 'mindmap'];
const VALID_ENGINES = ['mermaid', 'graphviz'];
function parseDiagramBlock(content) {
    const props = (0, lexer_1.parseKV)(content);
    // Validate diagram type
    const diagramType = (0, validation_1.validateEnum)(props.type, VALID_DIAGRAM_TYPES, 'flowchart');
    // Validate engine
    const engine = (0, validation_1.validateEnum)(props.engine, VALID_ENGINES, 'mermaid');
    const diagram = {
        type: 'diagram',
        diagramType,
        engine,
        code: (0, validation_1.validateString)(props.code, ''),
    };
    // Add title only if present
    if (props.title && typeof props.title === 'string') {
        diagram.title = props.title;
    }
    return diagram;
}
//# sourceMappingURL=diagram.js.map