"use strict";
// File: omniscript-core/parser/src/utils/validation.ts
// What: Runtime type validation helpers
// Why: Ensure type safety for parsed data structures
// Related: block-parsers/chart.ts, block-parsers/diagram.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateString = validateString;
exports.validateNumber = validateNumber;
exports.validateBoolean = validateBoolean;
exports.validateArray = validateArray;
exports.validateEnum = validateEnum;
function validateString(value, defaultValue = '') {
    return typeof value === 'string' ? value : defaultValue;
}
function validateNumber(value, defaultValue = 0) {
    return typeof value === 'number' ? value : defaultValue;
}
function validateBoolean(value, defaultValue = false) {
    return typeof value === 'boolean' ? value : defaultValue;
}
function validateArray(value, validator) {
    if (!Array.isArray(value))
        return [];
    return value.map(validator);
}
function validateEnum(value, validValues, defaultValue) {
    if (typeof value === 'string' && validValues.includes(value)) {
        return value;
    }
    return defaultValue;
}
//# sourceMappingURL=validation.js.map