"use strict";
// File: omniscript-core/parser/src/lexer/index.ts
// What: Main lexer module - exports all lexing functions
// Why: Central entry point for tokenization and lexical analysis
// Related: parser.ts, tokenizer.ts, strings.ts, comments.ts
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseKV = parseKV;
const comments_1 = require("./comments");
const tokenizer_1 = require("./tokenizer");
__exportStar(require("./tokenizer"), exports);
__exportStar(require("./strings"), exports);
__exportStar(require("./comments"), exports);
function parseKV(content) {
    const cleaned = (0, comments_1.removeComments)(content);
    return (0, tokenizer_1.parseKVInternal)(cleaned, 0).obj;
}
//# sourceMappingURL=index.js.map